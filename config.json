{
  "bundle": {
    "name": "mist",
    "type": "foreign",
    "install": "bin/install.sh",
    "uninstall": "bin/uninstall.sh"
  },
  "templates": [{"name": "find_instances",
                 "adapter": "slack",
                 "path": "templates/find_instances.mustache"},
                {"name": "empty_result",
                 "adapter": "slack",
                 "path": "templates/empty_result.mustache"},
                {"name": "list_keypairs",
                 "adapter": "slack",
                 "path": "templates/list_keypairs.mustache"}],
  "permissions": ["mist:view", "mist:change-state", "mist:destroy", "mist:create", "mist:manage-tags", "mist:change-acl"],
  "rules": ["when command is mist:ec2-find must have mist:view",
            "when command is mist:ec2-stop must have mist:change-state",
            "when command is mist:ec2-start must have mist:change-state",
            "when command is mist:ec2-reboot must have mist:change-state",
            "when command is mist:ec2-destroy must have mist:destroy",
            "when command is mist:ec2-create must have mist:create",
            "when command is mist:vpc-list must have mist:view",
            "when command is mist:keypairs-list must have mist:view",
            "when command is mist:ec2-tag must have mist:manage-tags",
            "when command is mist:s3-buckets must have mist:view",
            "when command is mist:s3-buckets with option[delete] == true must have mist:destroy",
            "when command is mist:s3-bucket-list must have mist:view",
            "when command is mist:s3-bucket-list with option[delete] == true must have mist:destroy",
            "when command is mist:s3-bucket-acl must have mist:view",
            "when command is mist:s3-bucket-acl with option[set-policy] == /.*/ must have mist:change-acl"],
  "commands": [
    {
      "name": "ec2-find",
      "version": "0.1",
      "executable": "commands/ec2_find.py",
      "enforcing": true,
      "calling_convention": "bound",
      "env_vars": {
        "PYTHONPATH": "$INSTALL_PATH/lib"
      },
      "documentation": "mist:ec2-find --region=<region> [--state | --tags | --ami | --return=(id,pubdns,privdns,state,keyname,ami,kernel,arch,vpc,pubip,privip,az,tags)]",
      "options": [
        {
          "type": "string",
          "required": true,
          "name": "region"
        },
        {
          "type": "string",
          "required": false,
          "name": "tags"
        },
        {
          "type": "string",
          "required": false,
          "name": "ami"
        },
        {
          "type": "string",
          "required": false,
          "name": "state"
        },
        {
          "type": "string",
          "required": false,
          "name": "return"
        }
      ]
    },
    {
      "name": "ec2-destroy",
      "version": "0.1",
      "executable": "commands/ec2_destroy.py",
      "enforcing": true,
      "calling_convention": "bound",
      "env_vars": {
        "PYTHONPATH": "$INSTALL_PATH/lib"
      },
      "documentation": "mist:ec2-destroy --region=<region> <instance_id>...",
      "options": [
        {
          "type": "string",
          "required": true,
          "name": "region"
        }
      ]
    },
    {
      "name": "ec2-reboot",
      "version": "0.1",
      "executable": "commands/ec2_state.py",
      "enforcing": true,
      "calling_convention": "bound",
      "env_vars": {
        "PYTHONPATH": "$INSTALL_PATH/lib"
      },
      "documentation": "mist:ec2-reboot --region=<region> <instance_id>...",
      "options": [
        {
          "type": "string",
          "required": true,
          "name": "region"
        }
      ]
    },
    {
      "name": "ec2-stop",
      "version": "0.1",
      "executable": "commands/ec2_state.py",
      "enforcing": true,
      "calling_convention": "bound",
      "env_vars": {
        "PYTHONPATH": "$INSTALL_PATH/lib"
      },
      "documentation": "mist:ec2-stop --region=<region> <instance_id>...",
      "options": [
        {
          "type": "string",
          "required": true,
          "name": "region"
        }
      ]
    },
    {
      "name": "ec2-start",
      "version": "0.1",
      "executable": "commands/ec2_state.py",
      "enforcing": true,
      "calling_convention": "bound",
      "env_vars": {
        "PYTHONPATH": "$INSTALL_PATH/lib"
      },
      "documentation": "mist:ec2-start --region=<region> <instance_id>...",
      "options": [
        {
          "type": "string",
          "required": true,
          "name": "region"
        }
      ]
    },
    {
      "name": "vpc-list",
      "version": "0.1",
      "executable": "commands/ec2_vpcs.py",
      "enforcing": true,
      "calling_convention": "bound",
      "env_vars": {
        "PYTHONPATH": "$INSTALL_PATH/lib"
      },
      "documentation": "mist:vpc-list --region=<region>",
      "options": [
        {
          "type": "string",
          "required": true,
          "name": "region"
        }
      ]
    },
    {
      "name": "keypairs-list",
      "version": "0.1",
      "executable": "commands/ec2_keypairs.py",
      "enforcing": true,
      "calling_convention": "bound",
      "env_vars": {
        "PYTHONPATH": "$INSTALL_PATH/lib"
      },
      "documentation": "mist:keypairs-list --region=<region> <name> ...",
      "options": [
        {
          "type": "string",
          "required": true,
          "name": "region"
        }
      ]
    },
    {
      "name": "ec2-create",
      "version": "0.1",
      "executable": "commands/ec2_create.py",
      "enforcing": true,
      "calling_convention": "bound",
      "env_vars": {
        "PYTHONPATH": "$INSTALL_PATH/lib"
      },
      "documentation": "mist:ec2-create --region=<region> --type=<type> --ami=<ami> --keypair=<pair> --az=<az> --vpc=<vpc> --tags=<tags> --user-data=<user_data>",
      "options": [
        {
          "type": "string",
          "required": true,
          "name": "region"
        },
        {
          "type": "string",
          "required": true,
          "name": "type"
        },
        {
          "type": "string",
          "required": true,
          "name": "ami"
        },
        {
          "type": "string",
          "required": true,
          "name": "keypair"
        },
        {
          "type": "string",
          "required": false,
          "name": "az"
        },
        {
          "type": "string",
          "required": false,
          "name": "vpc"
        },
        {
          "type": "string",
          "required": false,
          "name": "tags"
        },
        {
          "type": "string",
          "required": false,
          "name": "user-data"
        },
        {
          "type": "int",
          "required": false,
          "name": "count"
        }
      ]
    },
    {
      "name": "ec2-tag",
      "version": "0.1",
      "executable": "commands/ec2_tags.py",
      "enforcing": true,
      "calling_convention": "bound",
      "env_vars": {
        "PYTHONPATH": "$INSTALL_PATH/lib"
      },
      "documentation": "Add or remove EC2 instance tags",
      "options": [
        {
          "type": "string",
          "required": true,
          "name": "region"
        },
        {
          "type": "string",
          "required": true,
          "name": "tags"
        },
        {
          "type": "bool",
          "required": false,
          "name": "remove"
        }
      ]
    },
    {
      "name": "s3-buckets",
      "version": "0.1",
      "executable": "commands/s3_buckets.py",
      "enforcing": true,
      "calling_convention": "bound",
      "env_vars": {
        "PYTHONPATH": "$INSTALL_PATH/lib"
      },
      "documentation": "List S3 buckets",
      "options": [
        {
          "type": "bool",
          "required": false,
          "name": "delete"
        },
        {
          "type": "bool",
          "required": false,
          "name": "force"
        }
      ]
    },
    {
      "name": "s3-bucket-list",
      "version": "0.1",
      "executable": "commands/s3_bucket_list.py",
      "enforcing": true,
      "calling_convention": "bound",
      "env_vars": {
        "AWS_ACCESS_KEY_ID": "",
        "AWS_SECRET_ACCESS_KEY": "",
        "PYTHONPATH": "$INSTALL_PATH/lib"
      },
      "documentation": "s3-bucket-list [--delete --force] <bucket name> <search string> - List contents in a S3 bucket",
      "options": [
        {
          "type": "bool",
          "required": false,
          "name": "delete"
        },
        {
          "type": "bool",
          "required": false,
          "name": "force"
        }
      ]
    },
    {
      "name": "s3-bucket-acl",
      "version": "0.1",
      "executable": "commands/s3_bucket_acl.py",
      "enforcing": true,
      "calling_convention": "bound",
      "env_vars": {
        "AWS_ACCESS_KEY_ID": "",
        "AWS_SECRET_ACCESS_KEY": "",
        "PYTHONPATH": "$INSTALL_PATH/lib"
      },
      "documentation": "s3-bucket-acl [--set-policy=[public-read, private, public-read-write, authenticated-read] --force] <bucket name> <filename> - Displays or sets the ACL for a S3 bucket",
      "options": [
        {
          "type": "string",
          "required": false,
          "name": "set-policy"
        },
        {
          "type": "bool",
          "required": false,
          "name": "force"
        }
      ]
    }
  ]
}
